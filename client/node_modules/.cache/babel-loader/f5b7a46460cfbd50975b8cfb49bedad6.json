{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\course_work_db\\\\client\\\\src\\\\components\\\\watchman\\\\PopupChange.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Input from '../../utils/input/Input';\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport { setPopupChangeDisplay } from '../../reducers/employeeReducer';\nimport { Button } from 'react-bootstrap';\nimport './watchman.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopupChange = () => {\n  _s();\n\n  const [first_name, setFirstName] = useState('');\n  const [last_name, setLastName] = useState('');\n  const selectedEmployee = useSelector(state => state.employees.selectedEmployee);\n  const popupDisplay = useSelector(state => state.employees.popupChangeDisplay);\n  const dispatch = useDispatch();\n  setFirstName(selectedEmployee.first_name);\n  setLastName(selectedEmployee.last_name);\n\n  function createHandler(childRef1, childRef2) {\n    alert(\"change\");\n    childRef1.current.HandleClear();\n    childRef2.current.HandleClear();\n    dispatch(setPopupChangeDisplay('none'));\n  }\n\n  function clickHandle(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  const childRef1 = useRef();\n  const childRef2 = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    onClick: e => clickHandle(e),\n    style: {\n      display: popupDisplay\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__content\",\n      onClick: event => clickHandle(event),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup__title\",\n          children: \"\\u0421\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"popup__close\",\n          onClick: () => dispatch(setPopupChangeDisplay('none')),\n          variant: \"outline-primary\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: childRef1,\n        type: \"text\",\n        placeholder: \"\\u0418\\u043C\\u044F\",\n        value: first_name,\n        setValue: setFirstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: childRef2,\n        type: \"text\",\n        placeholder: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n        value: last_name,\n        setValue: setLastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"popup__create\",\n        onClick: () => createHandler(childRef1, childRef2),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PopupChange, \"2ZEyEcgK96vzYR25BllKsFCukvM=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = PopupChange;\nexport default PopupChange;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupChange\");","map":{"version":3,"sources":["C:/GitHub/course_work_db/client/src/components/watchman/PopupChange.jsx"],"names":["React","useDispatch","useSelector","Input","useState","useRef","setPopupChangeDisplay","Button","PopupChange","first_name","setFirstName","last_name","setLastName","selectedEmployee","state","employees","popupDisplay","popupChangeDisplay","dispatch","createHandler","childRef1","childRef2","alert","current","HandleClear","clickHandle","event","stopPropagation","preventDefault","e","display"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Input from '../../utils/input/Input';\r\nimport {useState} from 'react'\r\nimport {useRef} from 'react'\r\nimport { setPopupChangeDisplay } from '../../reducers/employeeReducer';\r\nimport { Button } from 'react-bootstrap';\r\nimport './watchman.css'\r\nconst PopupChange = () => {\r\n    const [first_name, setFirstName] = useState('')\r\n    const [last_name, setLastName] = useState('')\r\n    const selectedEmployee = useSelector(state => state.employees.selectedEmployee)\r\n    const popupDisplay = useSelector(state => state.employees.popupChangeDisplay)\r\n    const dispatch = useDispatch()\r\n    setFirstName(selectedEmployee.first_name)\r\n    setLastName(selectedEmployee.last_name)\r\n\r\n    function createHandler(childRef1, childRef2)\r\n    {\r\n        alert(\"change\")\r\n        childRef1.current.HandleClear();\r\n        childRef2.current.HandleClear();\r\n        dispatch(setPopupChangeDisplay('none'))\r\n    }\r\n\r\n    function clickHandle(event)\r\n    {\r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n    }\r\n\r\n    const childRef1 = useRef();\r\n    const childRef2 = useRef();\r\n    return(\r\n        <div className = 'popup' onClick ={(e)=> clickHandle(e) } style = {{display: popupDisplay}}>\r\n            <div className=\"popup__content\" onClick={(event => clickHandle(event))}>\r\n                <div className=\"popup__header\">\r\n                    <div className=\"popup__title\">Сотрудник</div>\r\n                    <Button className=\"popup__close\" onClick ={()=> dispatch(setPopupChangeDisplay('none'))} variant=\"outline-primary\">X</Button>\r\n                </div>\r\n                \r\n                <Input ref = {childRef1} type =\"text\" placeholder = \"Имя\" value={first_name} setValue={setFirstName}/>\r\n                <Input ref = {childRef2} type =\"text\" placeholder = \"Фамилия\" value={last_name} setValue={setLastName}/>\r\n                <Button className=\"popup__create\" onClick={() => createHandler(childRef1, childRef2)}>Добавить</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PopupChange;"]},"metadata":{},"sourceType":"module"}
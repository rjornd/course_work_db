{"ast":null,"code":"var _jsxFileName = \"C:\\\\course_work_db\\\\client\\\\src\\\\components\\\\watchman\\\\Popup.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Input from '../../utils/input/Input';\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport { setPopupDisplay } from '../../reducers/employeeReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Popup = () => {\n  _s();\n\n  const [cabinet, setCabinet] = useState('');\n  const popupDisplay = useSelector(state => state.employees.popupDisplay);\n  const selectedEmployee = useSelector(state => state.employees.selectedEmployee);\n  const dispatch = useDispatch();\n\n  function createHandler(childRef) {\n    // выдать ключ dispatch(createDir(currentDir, dirName))\n    dispatch(setPopupDisplay('none'));\n    childRef.current.HandleClear();\n  }\n\n  function clickHandle(event) {\n    event.preventDefault();\n\n    event => event.stopPropagation();\n\n    dispatch(setPopupDisplay('none'));\n  }\n\n  const childRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    onClick: () => clickHandle(),\n    style: {\n      display: popupDisplay\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__content\",\n      onClick: event => event.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup__title\",\n          children: [\"\\u0421\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A: \", (selectedEmployee === null || selectedEmployee === void 0 ? void 0 : selectedEmployee.first_name) + (selectedEmployee === null || selectedEmployee === void 0 ? void 0 : selectedEmployee.last_name)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"popup__close\",\n          onClick: () => dispatch(setPopupDisplay('none')),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: childRef,\n        type: \"text\",\n        placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043A\\u0430\\u0431\\u0438\\u043D\\u0435\\u0442\",\n        value: cabinet,\n        setValue: setCabinet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__create\",\n        onClick: () => createHandler(childRef),\n        children: \"\\u0412\\u044B\\u0434\\u0430\\u0442\\u044C \\u043A\\u043B\\u044E\\u0447\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Popup, \"ZZ5jdb74w9cMnPfwv78/CrqyPzA=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Popup;\nexport default Popup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"sources":["C:/course_work_db/client/src/components/watchman/Popup.jsx"],"names":["React","useDispatch","useSelector","Input","useState","useRef","setPopupDisplay","Popup","cabinet","setCabinet","popupDisplay","state","employees","selectedEmployee","dispatch","createHandler","childRef","current","HandleClear","clickHandle","event","preventDefault","stopPropagation","display","first_name","last_name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,MAAR,QAAqB,OAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;;AACA,MAAMC,KAAK,GAAG,MAAK;AAAA;;AACf,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMM,YAAY,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBF,YAA1B,CAAhC;AACA,QAAMG,gBAAgB,GAAGX,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBC,gBAA1B,CAApC;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;;AAEA,WAASc,aAAT,CAAuBC,QAAvB,EACA;AACI;AACAF,IAAAA,QAAQ,CAACR,eAAe,CAAC,MAAD,CAAhB,CAAR;AACAU,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,WAAjB;AACH;;AAED,WAASC,WAAT,CAAqBC,KAArB,EACA;AACIA,IAAAA,KAAK,CAACC,cAAN;;AACAD,IAAAA,KAAK,IAAIA,KAAK,CAACE,eAAN,EAAT;;AACAR,IAAAA,QAAQ,CAACR,eAAe,CAAC,MAAD,CAAhB,CAAR;AACH;;AAGD,QAAMU,QAAQ,GAAGX,MAAM,EAAvB;AACA,sBACI;AAAK,IAAA,SAAS,EAAG,OAAjB;AAAyB,IAAA,OAAO,EAAG,MAAKc,WAAW,EAAnD;AAAwD,IAAA,KAAK,EAAI;AAACI,MAAAA,OAAO,EAAEb;AAAV,KAAjE;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,OAAO,EAAGU,KAAK,IAAIA,KAAK,CAACE,eAAN,EAAnD;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iFAA0C,CAAAT,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEW,UAAlB,KAA+BX,gBAA/B,aAA+BA,gBAA/B,uBAA+BA,gBAAgB,CAAEY,SAAjD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,OAAO,EAAG,MAAKX,QAAQ,CAACR,eAAe,CAAC,MAAD,CAAhB,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,KAAD;AAAO,QAAA,GAAG,EAAIU,QAAd;AAAwB,QAAA,IAAI,EAAE,MAA9B;AAAqC,QAAA,WAAW,EAAG,6FAAnD;AAAsE,QAAA,KAAK,EAAER,OAA7E;AAAsF,QAAA,QAAQ,EAAEC;AAAhG;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAkC,QAAA,OAAO,EAAE,MAAMM,aAAa,CAACC,QAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAlCD;;GAAMT,K;UAEmBL,W,EACIA,W,EACRD,W;;;KAJfM,K;AAoCN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Input from '../../utils/input/Input';\r\nimport {useState} from 'react'\r\nimport {useRef} from 'react'\r\nimport { setPopupDisplay } from '../../reducers/employeeReducer';\r\nconst Popup = () =>{\r\n    const [cabinet, setCabinet] = useState('')\r\n    const popupDisplay = useSelector(state => state.employees.popupDisplay)\r\n    const selectedEmployee = useSelector(state => state.employees.selectedEmployee)\r\n    const dispatch = useDispatch()\r\n\r\n    function createHandler(childRef) \r\n    {\r\n        // выдать ключ dispatch(createDir(currentDir, dirName))\r\n        dispatch(setPopupDisplay('none'))\r\n        childRef.current.HandleClear();\r\n    }\r\n\r\n    function clickHandle(event)\r\n    {\r\n        event.preventDefault()\r\n        event => event.stopPropagation()\r\n        dispatch(setPopupDisplay('none'))\r\n    }\r\n\r\n\r\n    const childRef = useRef();\r\n    return(\r\n        <div className = 'popup' onClick ={()=> clickHandle() } style = {{display: popupDisplay}}>\r\n            <div className=\"popup__content\" onClick={(event => event.stopPropagation())}>\r\n                <div className=\"popup__header\">\r\n                    <div className=\"popup__title\">Сотрудник: {selectedEmployee?.first_name + selectedEmployee?.last_name}</div>\r\n                    <button className=\"popup__close\" onClick ={()=> dispatch(setPopupDisplay('none'))}>X</button>\r\n                </div>\r\n                <Input ref = {childRef} type =\"text\" placeholder = \"Выберите кабинет\" value={cabinet} setValue={setCabinet}/>\r\n                <button className=\"popup__create\" onClick={() => createHandler(childRef)}>Выдать ключ</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Popup;"]},"metadata":{},"sourceType":"module"}
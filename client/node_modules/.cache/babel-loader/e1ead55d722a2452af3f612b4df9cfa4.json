{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\course_work_db\\\\client\\\\src\\\\components\\\\Keys\\\\Keys.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addKey, allKeys } from \"../../actions/employees\";\nimport Input from \"../../utils/input/Input\";\nimport AllKeys from \"./AllKeys\";\nimport './keys.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Keys = () => {\n  _s();\n\n  const isAuth = useSelector(state => state.user.isAuth);\n  const dispatch = useDispatch();\n  const [cabinet, setCabinet] = useState('');\n  useEffect(() => {\n    dispatch(allKeys());\n  }, []);\n\n  function addHandler(childRef) {\n    dispatch(addKey(cabinet));\n    childRef.current.HandleClear();\n  }\n\n  const childRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        size: \"sm\",\n        onClick: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID \\u041A\\u043B\\u044E\\u0447\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u041A\\u0430\\u0431\\u0438\\u043D\\u0435\\u0442\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AllKeys, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: childRef,\n        type: \"text\",\n        placeholder: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0439 \\u043A\\u0430\\u0431\\u0438\\u043D\\u0435\\u0442\",\n        value: cabinet,\n        setValue: setCabinet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"popup__create\",\n          onClick: () => addHandler(childRef),\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Keys, \"TQh/5viL7FiV7Y7TuMN96BjYtjw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Keys;\nexport default Keys;\n\nvar _c;\n\n$RefreshReg$(_c, \"Keys\");","map":{"version":3,"sources":["C:/GitHub/course_work_db/client/src/components/Keys/Keys.jsx"],"names":["useEffect","useRef","useState","Button","Table","useDispatch","useSelector","addKey","allKeys","Input","AllKeys","Keys","isAuth","state","user","dispatch","cabinet","setCabinet","addHandler","childRef","current","HandleClear","e","preventDefault"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,yBAAhC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,YAAP;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,MAAM,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,MAArB,CAA1B;AACA,QAAMG,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,QAAQ,CAACP,OAAO,EAAR,CAAR;AACD,GAFM,EAEJ,EAFI,CAAT;;AAKA,WAASU,UAAT,CAAoBC,QAApB,EAA8B;AAC1BJ,IAAAA,QAAQ,CAACR,MAAM,CAACS,OAAD,CAAP,CAAR;AACAG,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,WAAjB;AACH;;AACD,QAAMF,QAAQ,GAAGlB,MAAM,EAAvB;AACA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACJ,QAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,QAAQ,MAAvB;AAAwB,QAAA,IAAI,EAAC,IAA7B;AAAkC,QAAA,OAAO,EAAEqB,CAAC,IAAIA,CAAC,CAACC,cAAF,EAAhD;AAAA,gCACI;AAAA,iCACI;AAAA,oCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAA,8BACA,QAAC,KAAD;AAAO,QAAA,GAAG,EAAIJ,QAAd;AAAwB,QAAA,IAAI,EAAE,MAA9B;AAAqC,QAAA,WAAW,EAAG,oJAAnD;AAAgF,QAAA,KAAK,EAAEH,OAAvF;AAAgG,QAAA,QAAQ,EAAEC;AAA1G;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACA,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,eAAlB;AAAkC,UAAA,OAAO,EAAE,MAAMC,UAAU,CAACC,QAAD,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAtCD;;GAAMR,I;UACaL,W,EACED,W;;;KAFfM,I;AAwCN,eAAeA,IAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { Button, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addKey, allKeys } from \"../../actions/employees\";\r\nimport Input from \"../../utils/input/Input\";\r\nimport AllKeys from \"./AllKeys\";\r\nimport './keys.css'\r\nconst Keys = () => {\r\n    const isAuth = useSelector(state => state.user.isAuth)\r\n    const dispatch = useDispatch()\r\n    const [cabinet, setCabinet] = useState('')\r\n    useEffect(() => {\r\n        dispatch(allKeys())\r\n      }, [] )\r\n\r\n    \r\n    function addHandler(childRef) {\r\n        dispatch(addKey(cabinet));\r\n        childRef.current.HandleClear();\r\n    }\r\n    const childRef = useRef();\r\n    return (\r\n        <div>\r\n            <div className=\"tab-wrapper\">\r\n        <Table striped bordered size=\"sm\" onClick={e => e.preventDefault()}>\r\n            <thead>\r\n                <tr>\r\n                <th>ID Ключа</th>\r\n                <th>Кабинет</th>\r\n                </tr>\r\n            </thead>\r\n            <AllKeys/>\r\n            </Table>\r\n        </div>\r\n            <div>\r\n            <Input ref = {childRef} type =\"text\" placeholder = \"Добавить доступный кабинет\" value={cabinet} setValue={setCabinet}/>\r\n            <div className=\"btn\">\r\n            <Button className=\"popup__create\" onClick={() => addHandler(childRef)}>Добавить</Button>\r\n            </div>\r\n                \r\n            </div>\r\n        </div>\r\n        \r\n        \r\n    );\r\n};\r\n\r\nexport default Keys;"]},"metadata":{},"sourceType":"module"}
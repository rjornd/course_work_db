{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\course_work_db\\\\client\\\\src\\\\components\\\\watchman\\\\PopupAdd.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Input from '../../utils/input/Input';\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport { setPopupGetDisplay } from '../../reducers/employeeReducer';\nimport { Button, Table } from 'react-bootstrap';\nimport CabinetList from './employeeItem/cabinetItem/cabinetlist';\nimport { addAvCabinet } from '../../actions/employees';\nimport './watchman.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopupAdd = () => {\n  _s();\n\n  const [first_name, setFirstName] = useState('');\n  const [last_name, setLastName] = useState('');\n  const popupDisplay = useSelector(state => state.employees.popupAddDisplay);\n  const dispatch = useDispatch();\n\n  function createHandler(childRef) {\n    dispatch(addAvCabinet(selectedEmployee, cabinet));\n    childRef.current.HandleClear();\n  }\n\n  function clickHandle(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  const childRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    onClick: e => clickHandle(e),\n    style: {\n      display: popupDisplay\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__content\",\n      onClick: event => clickHandle(event),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup__title\",\n          children: \"\\u0421\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"popup__close\",\n          onClick: () => dispatch(setPopupGetDisplay('none')),\n          variant: \"outline-primary\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: childRef,\n        type: \"text\",\n        placeholder: \"\\u0418\\u043C\\u044F\",\n        value: first_name,\n        setValue: setFirstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: childRef,\n        type: \"text\",\n        placeholder: \"\\u0418\\u043C\\u044F\",\n        value: last_name,\n        setValue: setLastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"popup__create\",\n        onClick: () => createHandler(childRef),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PopupAdd, \"Y1mYwKu4Nj+QqOXgM4QBHPXM+Ak=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PopupAdd;\nexport default PopupAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupAdd\");","map":{"version":3,"sources":["C:/GitHub/course_work_db/client/src/components/watchman/PopupAdd.jsx"],"names":["React","useDispatch","useSelector","Input","useState","useRef","setPopupGetDisplay","Button","Table","CabinetList","addAvCabinet","PopupAdd","first_name","setFirstName","last_name","setLastName","popupDisplay","state","employees","popupAddDisplay","dispatch","createHandler","childRef","selectedEmployee","cabinet","current","HandleClear","clickHandle","event","stopPropagation","preventDefault","e","display"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,MAAR,QAAqB,OAArB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAO,gBAAP;;;AACA,MAAMC,QAAQ,GAAG,MAAK;AAAA;;AAClB,QAAM,CAACC,UAAD,EAAaC,YAAb,IAA6BT,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACU,SAAD,EAAYC,WAAZ,IAA2BX,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAMY,YAAY,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBC,eAA1B,CAAhC;AACA,QAAMC,QAAQ,GAAGnB,WAAW,EAA5B;;AAEA,WAASoB,aAAT,CAAuBC,QAAvB,EACA;AACIF,IAAAA,QAAQ,CAACV,YAAY,CAACa,gBAAD,EAAmBC,OAAnB,CAAb,CAAR;AACAF,IAAAA,QAAQ,CAACG,OAAT,CAAiBC,WAAjB;AACH;;AAED,WAASC,WAAT,CAAqBC,KAArB,EACA;AAEIA,IAAAA,KAAK,CAACC,eAAN;AACAD,IAAAA,KAAK,CAACE,cAAN;AACH;;AAGD,QAAMR,QAAQ,GAAGjB,MAAM,EAAvB;AACA,sBACI;AAAK,IAAA,SAAS,EAAG,OAAjB;AAAyB,IAAA,OAAO,EAAI0B,CAAD,IAAMJ,WAAW,CAACI,CAAD,CAApD;AAA0D,IAAA,KAAK,EAAI;AAACC,MAAAA,OAAO,EAAEhB;AAAV,KAAnE;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,OAAO,EAAGY,KAAK,IAAID,WAAW,CAACC,KAAD,CAA9D;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,OAAO,EAAG,MAAKR,QAAQ,CAACd,kBAAkB,CAAC,MAAD,CAAnB,CAAxD;AAAsF,UAAA,OAAO,EAAC,iBAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,KAAD;AAAO,QAAA,GAAG,EAAIgB,QAAd;AAAwB,QAAA,IAAI,EAAE,MAA9B;AAAqC,QAAA,WAAW,EAAG,oBAAnD;AAAyD,QAAA,KAAK,EAAEV,UAAhE;AAA4E,QAAA,QAAQ,EAAEC;AAAtF;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,KAAD;AAAO,QAAA,GAAG,EAAIS,QAAd;AAAwB,QAAA,IAAI,EAAE,MAA9B;AAAqC,QAAA,WAAW,EAAG,oBAAnD;AAAyD,QAAA,KAAK,EAAER,SAAhE;AAA2E,QAAA,QAAQ,EAAEC;AAArF;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAkC,QAAA,OAAO,EAAE,MAAMM,aAAa,CAACC,QAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAnCD;;GAAMX,Q;UAGmBT,W,EACJD,W;;;KAJfU,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Input from '../../utils/input/Input';\r\nimport {useState} from 'react'\r\nimport {useRef} from 'react'\r\nimport { setPopupGetDisplay } from '../../reducers/employeeReducer';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport CabinetList from './employeeItem/cabinetItem/cabinetlist';\r\nimport { addAvCabinet } from '../../actions/employees';\r\nimport './watchman.css'\r\nconst PopupAdd = () =>{\r\n    const [first_name, setFirstName] = useState('')\r\n    const [last_name, setLastName] = useState('')\r\n    const popupDisplay = useSelector(state => state.employees.popupAddDisplay)\r\n    const dispatch = useDispatch()\r\n\r\n    function createHandler(childRef) \r\n    {\r\n        dispatch(addAvCabinet(selectedEmployee, cabinet))\r\n        childRef.current.HandleClear();\r\n    }\r\n\r\n    function clickHandle(event)\r\n    {\r\n        \r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n    }\r\n\r\n\r\n    const childRef = useRef();\r\n    return(\r\n        <div className = 'popup' onClick ={(e)=> clickHandle(e) } style = {{display: popupDisplay}}>\r\n            <div className=\"popup__content\" onClick={(event => clickHandle(event))}>\r\n                <div className=\"popup__header\">\r\n                    <div className=\"popup__title\">Сотрудник</div>\r\n                    <Button className=\"popup__close\" onClick ={()=> dispatch(setPopupGetDisplay('none'))} variant=\"outline-primary\">X</Button>\r\n                </div>\r\n                \r\n                <Input ref = {childRef} type =\"text\" placeholder = \"Имя\" value={first_name} setValue={setFirstName}/>\r\n                <Input ref = {childRef} type =\"text\" placeholder = \"Имя\" value={last_name} setValue={setLastName}/>\r\n                <Button className=\"popup__create\" onClick={() => createHandler(childRef)}>Добавить</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PopupAdd;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\ProtectedMessenger\\\\client\\\\src\\\\components\\\\disk\\\\Disk.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './disk.css';\nimport { getFiles, createDir, uploadFile } from \"../../actions/file\";\nimport FileList from './fileList/FileList';\nimport Popup from './Popup';\nimport { setCurrentDir, setPopupDisplay } from '../../reducers/fileReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Disk = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const currentDir = useSelector(state => state.files.currentDir);\n  const dirStack = useSelector(state => state.files.dirStack);\n  const [dragEnter, setDragEnter] = useState(false);\n\n  function showPopupHandler() {\n    dispatch(setPopupDisplay('flex'));\n  }\n\n  function fileUploadHandler(event) {\n    const files = [...event.target.files];\n    files.forEach(file => dispatch(uploadFile(file, currentDir)));\n  }\n\n  function backClickHandler() {\n    const backDirId = dirStack.pop();\n    dispatch(setCurrentDir(backDirId));\n  }\n\n  function dragEnterHandler(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    SetDragEnter(true);\n  }\n\n  function dragLeaveHandler(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    setDragEnter(false);\n  }\n\n  useEffect(() => {\n    dispatch(getFiles(currentDir));\n  }, [currentDir]);\n  return !dragEnter ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"disk\",\n    onDragEnter: dragEnterHandler,\n    onDragLeave: dragLeaveHandler,\n    onDragOver: dragEnterHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"disk__btns\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"disk__back\",\n        onClick: () => backClickHandler(),\n        children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"disk__create\",\n        onClick: () => showPopupHandler(),\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u0430\\u043F\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"disk__upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"disk__upload-input\",\n          className: \"disk__upload-label\",\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          multiple: true,\n          onChange: event => fileUploadHandler(event),\n          type: \"file\",\n          id: \"disk__upload-input\",\n          className: \"disk__upload-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(FileList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drop-area\",\n    onDragEnter: dragEnterHandler,\n    onDragLeave: dragLeaveHandler,\n    onDragOver: dragEnterHandler,\n    children: \"\\u041F\\u0435\\u0440\\u0435\\u0442\\u0430\\u0449\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B\\u044B \\u0441\\u044E\\u0434\\u0430.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Disk, \"hfXWJ7a2GAtaXJ6uSRFA+kKKj70=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Disk;\nexport default Disk;\n\nvar _c;\n\n$RefreshReg$(_c, \"Disk\");","map":{"version":3,"sources":["C:/GitHub/ProtectedMessenger/client/src/components/disk/Disk.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","getFiles","createDir","uploadFile","FileList","Popup","setCurrentDir","setPopupDisplay","Disk","dispatch","currentDir","state","files","dirStack","dragEnter","setDragEnter","showPopupHandler","fileUploadHandler","event","target","forEach","file","backClickHandler","backDirId","pop","dragEnterHandler","preventDefault","stopPropagation","SetDragEnter","dragLeaveHandler"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './disk.css'\r\nimport {getFiles, createDir, uploadFile} from \"../../actions/file\";\r\nimport FileList from './fileList/FileList'\r\nimport Popup from './Popup';\r\nimport { setCurrentDir, setPopupDisplay } from '../../reducers/fileReducer';\r\n\r\nconst Disk = () => {\r\n    const dispatch = useDispatch()\r\n    const currentDir = useSelector(state => state.files.currentDir)\r\n    const dirStack = useSelector(state=> state.files.dirStack)\r\n    const [dragEnter, setDragEnter] = useState(false)\r\n    function showPopupHandler() {\r\n        dispatch(setPopupDisplay('flex'))\r\n    }\r\n    \r\n    function fileUploadHandler(event) {\r\n        const files = [...event.target.files]\r\n        files.forEach(file => dispatch(uploadFile(file, currentDir)))\r\n    }\r\n    function backClickHandler() {\r\n        const backDirId = dirStack.pop()\r\n        dispatch(setCurrentDir(backDirId))\r\n    }\r\n    function dragEnterHandler(event){\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n        SetDragEnter(true)\r\n    }\r\n    function dragLeaveHandler(event){\r\n        event.preventDefault()\r\n        event.stopPropagation()\r\n        setDragEnter(false)\r\n    }\r\n\r\n    useEffect(\r\n    () => {\r\n        dispatch(getFiles(currentDir))\r\n    },\r\n        [currentDir]\r\n    )\r\n    return ( !dragEnter?\r\n            <div className = \"disk\" onDragEnter={dragEnterHandler} onDragLeave={dragLeaveHandler} onDragOver={dragEnterHandler}>\r\n                <div className = \"disk__btns\">\r\n                    <button className = \"disk__back\" onClick={()=> backClickHandler()}>Назад</button>\r\n                    <button className = \"disk__create\" onClick ={()=> showPopupHandler()}>Создать папку</button>\r\n                    <div className = \"disk__upload\">\r\n                        <label htmlFor =\"disk__upload-input\" className=\"disk__upload-label\">Загрузить файл</label>\r\n                        <input multiple = {true} onChange={(event)=> fileUploadHandler(event)} type=\"file\"  id=\"disk__upload-input\" className=\"disk__upload-input\"/>\r\n                    </div>\r\n                </div>\r\n                <FileList/>\r\n                <Popup/>\r\n        </div>\r\n        :\r\n        <div className = \"drop-area\" onDragEnter={dragEnterHandler} onDragLeave={dragLeaveHandler} onDragOver={dragEnterHandler}>\r\n            Перетащите файлы сюда.\r\n        </div>\r\n    );\r\n};\r\nexport default Disk;\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nimport { addFile, deleteFileAction, setFiles } from '../reducers/fileReducer';\nexport function getFiles(dirId) {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/files/${dirId ? '?parent=' + dirId : ''}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      dispatch(setFiles(response.data));\n      console.log(response.data);\n    } catch (e) {\n      alert(e.response.data.message);\n    }\n  };\n}\nexport function createDir(dirId, name) {\n  return async dispatch => {\n    try {\n      const response = await axios.post(`http://localhost:5000/api/files/`, {\n        name,\n        parent: dirId,\n        type: 'dir'\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      dispatch(addFile(response.data));\n    } catch (e) {\n      alert(e.response.data.message);\n    }\n  };\n}\nexport function deleteFile(file) {\n  return async dispatch => {\n    try {\n      const response = await axios.delete(`http://localhost:5000/api/files?id=${file._id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      dispatch(deleteFileAction(file._id));\n      alert(response.data.message);\n    } catch (e) {\n      var _e$response, _e$response$data;\n\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message);\n    }\n  };\n}\nexport function uploadFile(file, dirId) {\n  return async dispatch => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      if (dirId) {\n        formData.append('parent', dirId);\n      }\n\n      const response = await axios.post(`http://localhost:5000/api/files/upload`, formData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        onUploadProgress: progressEvent => {\n          const totalLength = progressEvent.lengthComputable ? progressEvent.total : progressEvent.target.getResponseHeader('content-length') || progressEvent.target.getResponseHeader('x-decompressed-content-length');\n          console.log('total', totalLength);\n\n          if (totalLength) {\n            let progress = Math.round(progressEvent.loaded * 100 / totalLength);\n            console.log(progress);\n          }\n        }\n      });\n      dispatch(addFile(response.data));\n    } catch (e) {\n      alert(e.response.data.message);\n    }\n  };\n}\nexport async function downloadFile(file) {\n  const response = await fetch(`http://localhost:5000/api/files/download?id=${file._id}`, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n  });\n\n  if (response.status === 200) {\n    const blob = await response.blob();\n    const downloadUrl = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = downloadUrl;\n    link.download = file.name;\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n  }\n}","map":{"version":3,"sources":["C:/GitHub/ProtectedMessenger/client/src/actions/file.js"],"names":["axios","addFile","deleteFileAction","setFiles","getFiles","dirId","dispatch","response","get","headers","Authorization","localStorage","getItem","data","console","log","e","alert","message","createDir","name","post","parent","type","deleteFile","file","delete","_id","uploadFile","formData","FormData","append","onUploadProgress","progressEvent","totalLength","lengthComputable","total","target","getResponseHeader","progress","Math","round","loaded","downloadFile","fetch","status","blob","downloadUrl","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","remove"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { addFile, deleteFileAction, setFiles } from '../reducers/fileReducer'\r\n\r\nexport function getFiles(dirId){\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/api/files/${dirId ? '?parent='+dirId : ''}`, {\r\n                headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}\r\n            })\r\n            dispatch(setFiles(response.data))\r\n            console.log(response.data)\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport function createDir(dirId, name){\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.post(`http://localhost:5000/api/files/`, {\r\n                name,\r\n                parent: dirId,\r\n                type: 'dir'\r\n            },\r\n            {\r\n                headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}\r\n            })\r\n            dispatch(addFile(response.data))\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteFile(file){\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.delete(`http://localhost:5000/api/files?id=${file._id}`, {\r\n\r\n                headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}\r\n            })\r\n            dispatch(deleteFileAction(file._id))\r\n            alert(response.data.message)\r\n        } catch (e) {\r\n            alert(e?.response?.data?.message)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function uploadFile(file, dirId){\r\n    return async dispatch => {\r\n        try {\r\n            const formData = new FormData()\r\n            formData.append('file', file)\r\n            if(dirId){\r\n                formData.append('parent', dirId)\r\n            }\r\n            const response = await axios.post(`http://localhost:5000/api/files/upload`, formData, \r\n            {\r\n                headers: {Authorization: `Bearer ${localStorage.getItem('token')}`},\r\n                onUploadProgress: progressEvent => {\r\n                    const totalLength = progressEvent.lengthComputable ? progressEvent.total : progressEvent.target.getResponseHeader('content-length') || progressEvent.target.getResponseHeader('x-decompressed-content-length');\r\n                    console.log('total', totalLength)\r\n                    if (totalLength) {\r\n                        let progress = Math.round((progressEvent.loaded * 100) / totalLength)\r\n                        console.log(progress)\r\n                    }\r\n                }\r\n            })\r\n            dispatch(addFile(response.data))\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport async function downloadFile(file){\r\n   const response = await fetch(`http://localhost:5000/api/files/download?id=${file._id}`, {\r\n       headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}\r\n    })\r\n    if (response.status === 200) {\r\n        const blob = await response.blob()\r\n        const downloadUrl = window.URL.createObjectURL(blob)\r\n        const link = document.createElement('a')\r\n        link.href = downloadUrl\r\n        link.download = file.name\r\n        document.body.appendChild(link)\r\n        link.click()\r\n        link.remove()\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
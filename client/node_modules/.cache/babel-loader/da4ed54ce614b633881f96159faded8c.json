{"ast":null,"code":"var _jsxFileName = \"F:\\\\Files\\\\GitHub\\\\ProtectedMessenger\\\\client\\\\src\\\\components\\\\disk\\\\fileList\\\\file\\\\File.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './file.css';\nimport filelogo from \"../../../../assets/img/file.svg\";\nimport dirlogo from \"../../../../assets/img/dir.svg\";\nimport { pushToStack, setCurrentDir } from '../../../../reducers/fileReducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteFile, downloadFile } from '../../../../../src/actions/file';\nimport sizeFormat from '../../../../utils/sizeFormat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst File = ({\n  file\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const currentDir = useSelector(state => state.files.currentDir);\n\n  function openDirHandler() {\n    dispatch(pushToStack(currentDir));\n    dispatch(setCurrentDir(file._id));\n  }\n\n  function downloadClickHandler(e) {\n    e.stopPropagation();\n    downloadFile(file);\n  }\n\n  function deleteClickHandler(e) {\n    e.stopPropagation();\n    dispatch(deleteFile(file));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file\",\n    onClick: () => openDirHandler(),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: file.type === 'dir' ? dirlogo : filelogo,\n      alt: \"\",\n      className: \"file__img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file__name\",\n      children: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file__date\",\n      children: file.date.slice(0, 10)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file__size\",\n      children: sizeFormat(file.size)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), file.type !== 'dir' && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => downloadClickHandler(e),\n      className: \"file__btn file__download\",\n      children: \"download\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"file__btn file__delete\",\n      onClick: e => deleteClickHandler(e),\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(File, \"YH1+1VQgoPmNSkl/ySjl2Cv0Sow=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = File;\nexport default File;\n\nvar _c;\n\n$RefreshReg$(_c, \"File\");","map":{"version":3,"sources":["F:/Files/GitHub/ProtectedMessenger/client/src/components/disk/fileList/file/File.jsx"],"names":["React","pushToStack","setCurrentDir","useDispatch","useSelector","deleteFile","downloadFile","sizeFormat","File","file","dispatch","currentDir","state","files","openDirHandler","_id","downloadClickHandler","e","stopPropagation","deleteClickHandler","type","dirlogo","filelogo","name","date","slice","size"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;;AAGA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,kCAA3C;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iCAAzC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;;AACA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KACb;AAAA;;AACI,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,UAAU,GAAGP,WAAW,CAACQ,KAAK,IAAGA,KAAK,CAACC,KAAN,CAAYF,UAArB,CAA9B;;AACA,WAASG,cAAT,GAAyB;AACrBJ,IAAAA,QAAQ,CAACT,WAAW,CAACU,UAAD,CAAZ,CAAR;AACAD,IAAAA,QAAQ,CAACR,aAAa,CAACO,IAAI,CAACM,GAAN,CAAd,CAAR;AACH;;AACD,WAASC,oBAAT,CAA8BC,CAA9B,EAAiC;AAC7BA,IAAAA,CAAC,CAACC,eAAF;AACAZ,IAAAA,YAAY,CAACG,IAAD,CAAZ;AACH;;AACD,WAASU,kBAAT,CAA4BF,CAA5B,EAA8B;AAC1BA,IAAAA,CAAC,CAACC,eAAF;AACAR,IAAAA,QAAQ,CAACL,UAAU,CAACI,IAAD,CAAX,CAAR;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAwB,IAAA,OAAO,EAAG,MAAIK,cAAc,EAApD;AAAA,4BACI;AAAK,MAAA,GAAG,EAAIL,IAAI,CAACW,IAAL,KAAc,KAAd,GAAsBC,OAAtB,GAAgCC,QAA5C;AAAsD,MAAA,GAAG,EAAG,EAA5D;AAA+D,MAAA,SAAS,EAAE;AAA1E;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA,gBAA+Bb,IAAI,CAACc;AAApC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA,gBAA+Bd,IAAI,CAACe,IAAL,CAAUC,KAAV,CAAgB,CAAhB,EAAkB,EAAlB;AAA/B;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA,gBAA+BlB,UAAU,CAACE,IAAI,CAACiB,IAAN;AAAzC;AAAA;AAAA;AAAA;AAAA,YAJJ,EAKKjB,IAAI,CAACW,IAAL,KAAc,KAAd,iBAAsB;AAAQ,MAAA,OAAO,EAAGH,CAAD,IAAOD,oBAAoB,CAACC,CAAD,CAA5C;AAAiD,MAAA,SAAS,EAAC,0BAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAL3B,eAMI;AAAQ,MAAA,SAAS,EAAC,wBAAlB;AAA2C,MAAA,OAAO,EAAGA,CAAD,IAAOE,kBAAkB,CAACF,CAAD,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA1BD;;GAAMT,I;UAEeL,W,EACEC,W;;;KAHjBI,I;AA2BN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport './file.css'\r\nimport filelogo from '../../../../assets/img/file.svg'\r\nimport dirlogo from '../../../../assets/img/dir.svg'\r\nimport { pushToStack, setCurrentDir } from '../../../../reducers/fileReducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { deleteFile, downloadFile } from '../../../../../src/actions/file';\r\nimport sizeFormat from '../../../../utils/sizeFormat';\r\nconst File = ({file}) =>\r\n{\r\n    const dispatch = useDispatch()\r\n    const currentDir = useSelector(state=> state.files.currentDir)\r\n    function openDirHandler(){\r\n        dispatch(pushToStack(currentDir))\r\n        dispatch(setCurrentDir(file._id))\r\n    }\r\n    function downloadClickHandler(e) {\r\n        e.stopPropagation()\r\n        downloadFile(file)\r\n    }\r\n    function deleteClickHandler(e){\r\n        e.stopPropagation()\r\n        dispatch(deleteFile(file))\r\n    }\r\n    return (\r\n        <div className = 'file' onClick ={()=>openDirHandler()}>\r\n            <img src = {file.type === 'dir' ? dirlogo : filelogo} alt = '' className= 'file__img'/>\r\n            <div className = 'file__name'>{file.name}</div>\r\n            <div className = 'file__date'>{file.date.slice(0,10)}</div>\r\n            <div className = 'file__size'>{sizeFormat(file.size)}</div>\r\n            {file.type !== 'dir' &&<button onClick={(e) => downloadClickHandler(e)} className=\"file__btn file__download\">download</button>}\r\n            <button className=\"file__btn file__delete\" onClick={(e) => deleteClickHandler(e)}>delete</button>\r\n        </div>\r\n    );\r\n};\r\nexport default File;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"F:\\\\Files\\\\GitHub\\\\ProtectedMessenger\\\\client\\\\src\\\\components\\\\disk\\\\Popup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setPopupDisplay } from '../../reducers/fileReducer';\nimport Input from '../../utils/input/Input';\nimport { createDir } from \"../../actions/file\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Popup = () => {\n  _s();\n\n  const [dirName, setDirName] = useState('');\n  const popupDisplay = useSelector(state => state.files.popupDisplay);\n  const dispatch = useDispatch();\n  const currentDir = useSelector(state => state.files.currentDir);\n\n  function createHandler() {\n    dispatch(createDir(currentDir, dirName));\n    dispatch(setPopupDisplay('none'));\n  }\n\n  var childRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    onClick: () => dispatch(setPopupDisplay('none')),\n    style: {\n      display: popupDisplay\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__content\",\n      onClick: event => event.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup__title\",\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u043F\\u0430\\u043F\\u043A\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"popup__close\",\n          onClick: () => dispatch(setPopupDisplay('none')),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: childRef,\n        type: \"text\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0430\\u043F\\u043A\\u0438\",\n        value: dirName,\n        setValue: setDirName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__create\",\n        onClick: (alert(childRef.current.value), () => createHandler()),\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u0430\\u043F\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Popup, \"dymKWbQyaYvrdhEdAoYYUjotbos=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Popup;\nexport default Popup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"sources":["F:/Files/GitHub/ProtectedMessenger/client/src/components/disk/Popup.jsx"],"names":["React","useRef","useState","useDispatch","useSelector","setPopupDisplay","Input","createDir","Popup","dirName","setDirName","popupDisplay","state","files","dispatch","currentDir","createHandler","childRef","display","event","stopPropagation","alert","current","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAAQC,SAAR,QAAwB,oBAAxB;;;AAEA,MAAMC,KAAK,GAAG,MAAK;AAAA;;AACf,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMS,YAAY,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYF,YAAtB,CAAhC;AACA,QAAMG,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,UAAU,GAAGX,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,UAAtB,CAA9B;;AAEA,WAASC,aAAT,GACA;AACIF,IAAAA,QAAQ,CAACP,SAAS,CAACQ,UAAD,EAAaN,OAAb,CAAV,CAAR;AACAK,IAAAA,QAAQ,CAACT,eAAe,CAAC,MAAD,CAAhB,CAAR;AACH;;AACD,MAAIY,QAAQ,GAAGhB,MAAM,EAArB;AACA,sBACI;AAAK,IAAA,SAAS,EAAG,OAAjB;AAAyB,IAAA,OAAO,EAAG,MAAKa,QAAQ,CAACT,eAAe,CAAC,MAAD,CAAhB,CAAhD;AAA2E,IAAA,KAAK,EAAI;AAACa,MAAAA,OAAO,EAAEP;AAAV,KAApF;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,OAAO,EAAGQ,KAAK,IAAIA,KAAK,CAACC,eAAN,EAAnD;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,OAAO,EAAG,MAAKN,QAAQ,CAACT,eAAe,CAAC,MAAD,CAAhB,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,KAAD;AAAO,QAAA,GAAG,EAAIY,QAAd;AAAwB,QAAA,IAAI,EAAE,MAA9B;AAAqC,QAAA,WAAW,EAAG,4HAAnD;AAA4E,QAAA,KAAK,EAAER,OAAnF;AAA4F,QAAA,QAAQ,EAAEC;AAAtG;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAkC,QAAA,OAAO,GACrCW,KAAK,CAACJ,QAAQ,CAACK,OAAT,CAAiBC,KAAlB,CAAL,EACA,MAAMP,aAAa,EAFkB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA1BD;;GAAMR,K;UAEmBJ,W,EACJD,W,EACEC,W;;;KAJjBI,K;AA4BN,eAAeA,KAAf","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setPopupDisplay } from '../../reducers/fileReducer';\r\nimport Input from '../../utils/input/Input';\r\nimport {createDir} from \"../../actions/file\"\r\n\r\nconst Popup = () =>{\r\n    const [dirName, setDirName] = useState('')\r\n    const popupDisplay = useSelector(state => state.files.popupDisplay)\r\n    const dispatch = useDispatch()\r\n    const currentDir = useSelector(state => state.files.currentDir)\r\n\r\n    function createHandler() \r\n    {\r\n        dispatch(createDir(currentDir, dirName))\r\n        dispatch(setPopupDisplay('none'))\r\n    }\r\n    var childRef = useRef();\r\n    return(\r\n        <div className = 'popup' onClick ={()=> dispatch(setPopupDisplay('none'))} style = {{display: popupDisplay}}>\r\n            <div className=\"popup__content\" onClick={(event => event.stopPropagation())}>\r\n                <div className=\"popup__header\">\r\n                    <div className=\"popup__title\">Создать новую папку</div>\r\n                    <button className=\"popup__close\" onClick ={()=> dispatch(setPopupDisplay('none'))}>X</button>\r\n                </div>\r\n                <Input ref = {childRef} type =\"text\" placeholder = \"Введите название папки\" value={dirName} setValue={setDirName}/>\r\n                <button className=\"popup__create\" onClick={\r\n                    alert(childRef.current.value),\r\n                    () => createHandler()}>Создать папку</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Popup;"]},"metadata":{},"sourceType":"module"}
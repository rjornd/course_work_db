{"ast":null,"code":"import axios from 'axios';\nimport { API_URL } from '../config';\nimport { hideLoader, showLoader } from '../reducers/appReducer';\nimport { addFile, deleteFileAction, setFiles } from '../reducers/fileReducer';\nimport { addUploadFile, changeUploadFile, showUploader } from '../reducers/uploadReducer';\nexport function getFiles(dirId, sort) {\n  return async dispatch => {\n    try {\n      dispatch(showLoader());\n      let url = `${API_URL}api/files`;\n\n      if (dirId) {\n        url = `${API_URL}api/files?parent=${dirId}`;\n      }\n\n      if (sort) {\n        url = `${API_URL}api/files?sort=${sort}`;\n      }\n\n      if (sort && dirId) {\n        url = `${API_URL}api/files?parent=${dirId}&sort=${sort}`;\n      }\n\n      const response = await axios.get(url, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      dispatch(setFiles(response.data));\n    } catch (e) {\n      alert(e);\n    } finally {\n      dispatch(hideLoader());\n    }\n  };\n}\nexport function createDir(dirId, name) {\n  return async dispatch => {\n    try {\n      const response = await axios.post(`${API_URL}api/files/`, {\n        name,\n        parent: dirId,\n        type: 'dir'\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      dispatch(addFile(response.data));\n    } catch (e) {\n      alert(e.response.data.message);\n    }\n  };\n}\nexport function deleteFile(file) {\n  return async dispatch => {\n    try {\n      const response = await axios.delete(`${API_URL}api/files?id=${file._id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      dispatch(deleteFileAction(file._id));\n      alert(response.data.message);\n    } catch (e) {\n      var _e$response, _e$response$data;\n\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message);\n    }\n  };\n}\nexport function uploadFile(file, dirId) {\n  return async dispatch => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      if (dirId) {\n        formData.append('parent', dirId);\n      }\n\n      let uploadfile = {\n        name: file.name,\n        progress: 0,\n        id: Date.now()\n      };\n      dispatch(showUploader());\n      dispatch(addUploadFile(uploadfile));\n      const response = await axios.post(`${API_URL}api/files/upload`, formData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        onUploadProgress: progressEvent => {\n          const totalLength = progressEvent.lengthComputable ? progressEvent.total : progressEvent.target.getResponseHeader('content-length') || progressEvent.target.getResponseHeader('x-decompressed-content-length');\n          console.log('total', totalLength);\n\n          if (totalLength) {\n            uploadfile.progress = Math.round(progressEvent.loaded * 100 / totalLength);\n            dispatch(changeUploadFile(uploadfile));\n          }\n        }\n      });\n      dispatch(addFile(response.data));\n    } catch (e) {\n      alert(e.response.data.message);\n    }\n  };\n}\nexport async function downloadFile(file) {\n  const response = await fetch(`${API_URL}api/files/download?id=${file._id}`, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n  });\n\n  if (response.status === 200) {\n    const blob = await response.blob();\n    const downloadUrl = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = downloadUrl;\n    link.download = file.name;\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n  }\n}\nexport function searchFiles(search) {\n  return async dispatch => {\n    try {\n      dispatch(showLoader());\n      const response = await axios.get(`${API_URL}api/files/search?search=${search}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      dispatch(setFiles(response.data));\n    } catch (e) {\n      alert(e);\n    } finally {\n      dispatch(hideLoader());\n    }\n  };\n}","map":{"version":3,"sources":["C:/GitHub/ProtectedMessenger/client/src/actions/file.js"],"names":["axios","API_URL","hideLoader","showLoader","addFile","deleteFileAction","setFiles","addUploadFile","changeUploadFile","showUploader","getFiles","dirId","sort","dispatch","url","response","get","headers","Authorization","localStorage","getItem","data","e","alert","createDir","name","post","parent","type","message","deleteFile","file","delete","_id","uploadFile","formData","FormData","append","uploadfile","progress","id","Date","now","onUploadProgress","progressEvent","totalLength","lengthComputable","total","target","getResponseHeader","console","log","Math","round","loaded","downloadFile","fetch","status","blob","downloadUrl","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","remove","searchFiles","search"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { API_URL } from '../config'\r\nimport { hideLoader, showLoader } from '../reducers/appReducer'\r\nimport { addFile, deleteFileAction, setFiles } from '../reducers/fileReducer'\r\nimport { addUploadFile, changeUploadFile, showUploader } from '../reducers/uploadReducer'\r\n\r\nexport function getFiles(dirId, sort){\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(showLoader())\r\n            let url = `${API_URL}api/files`\r\n            if (dirId) \r\n            {\r\n                url = `${API_URL}api/files?parent=${dirId}`\r\n            }\r\n            if (sort) \r\n            {\r\n                url =  `${API_URL}api/files?sort=${sort}`\r\n            }\r\n            if(sort && dirId)\r\n            {\r\n                url = `${API_URL}api/files?parent=${dirId}&sort=${sort}`\r\n            }\r\n            const response = await axios.get(url, {\r\n                headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}\r\n            })\r\n            dispatch(setFiles(response.data))\r\n         } \r\n        catch (e) {\r\n            alert(e)\r\n        } \r\n        finally {            \r\n            dispatch(hideLoader())\r\n        }      \r\n    }\r\n}\r\n\r\nexport function createDir(dirId, name){\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.post(`${API_URL}api/files/`, {\r\n                name,\r\n                parent: dirId,\r\n                type: 'dir'\r\n            },\r\n            {\r\n                headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}\r\n            })\r\n            dispatch(addFile(response.data))\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteFile(file){\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.delete(`${API_URL}api/files?id=${file._id}`, {\r\n\r\n                headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}\r\n            })\r\n            dispatch(deleteFileAction(file._id))\r\n            alert(response.data.message)\r\n        } catch (e) {\r\n            alert(e?.response?.data?.message)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function uploadFile(file, dirId){\r\n    return async dispatch => {\r\n        try {\r\n            const formData = new FormData()\r\n            formData.append('file', file)\r\n            if(dirId){\r\n                formData.append('parent', dirId)\r\n            }\r\n            let uploadfile = {name: file.name, progress: 0, id: Date.now()}\r\n            dispatch(showUploader())\r\n            dispatch(addUploadFile(uploadfile))\r\n            const response = await axios.post(`${API_URL}api/files/upload`, formData, \r\n            {\r\n                headers: {Authorization: `Bearer ${localStorage.getItem('token')}`},\r\n                onUploadProgress: progressEvent => {\r\n                    const totalLength = progressEvent.lengthComputable ? progressEvent.total : progressEvent.target.getResponseHeader('content-length') || progressEvent.target.getResponseHeader('x-decompressed-content-length');\r\n                    console.log('total', totalLength)\r\n                    if (totalLength) {\r\n                        uploadfile.progress = Math.round((progressEvent.loaded * 100) / totalLength)\r\n                        dispatch(changeUploadFile(uploadfile))\r\n                    }\r\n                }\r\n            })\r\n            dispatch(addFile(response.data))\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport async function downloadFile(file){\r\n   const response = await fetch(`${API_URL}api/files/download?id=${file._id}`, {\r\n       headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}\r\n    })\r\n    if (response.status === 200) {\r\n        const blob = await response.blob()\r\n        const downloadUrl = window.URL.createObjectURL(blob)\r\n        const link = document.createElement('a')\r\n        link.href = downloadUrl\r\n        link.download = file.name\r\n        document.body.appendChild(link)\r\n        link.click()\r\n        link.remove()\r\n    }\r\n}\r\n\r\nexport function searchFiles(search){\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(showLoader())\r\n            const response = await axios.get(`${API_URL}api/files/search?search=${search}`,\r\n            {\r\n                headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}\r\n            })\r\n            dispatch(setFiles(response.data))\r\n        } catch (e) {\r\n            alert(e)\r\n        }   finally {\r\n            dispatch(hideLoader())\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\course_work_db\\\\client\\\\src\\\\components\\\\watchman\\\\PopupChange.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Input from '../../utils/input/Input';\nimport { useState } from 'react';\nimport { useRef } from 'react';\nimport { setPopupChangeDisplay } from '../../reducers/employeeReducer';\nimport { Button } from 'react-bootstrap';\nimport './watchman.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopupChange = () => {\n  _s();\n\n  const [first_name, setFirstName] = useState('');\n  const [last_name, setLastName] = useState('');\n  const selectedEmployee = useSelector(state => state.employees.selectedEmployee);\n  const popupDisplay = useSelector(state => state.employees.popupChangeDisplay);\n  const dispatch = useDispatch();\n\n  function createHandler(childRef1, childRef2) {\n    alert(\"change\");\n    childRef1.current.HandleClear();\n    childRef2.current.HandleClear();\n    dispatch(setPopupChangeDisplay('none'));\n  }\n\n  function clickHandle(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  const childRef1 = useRef();\n  const childRef2 = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 8\n  }, this);\n};\n\n_s(PopupChange, \"2ZEyEcgK96vzYR25BllKsFCukvM=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = PopupChange;\nexport default PopupChange;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupChange\");","map":{"version":3,"sources":["C:/GitHub/course_work_db/client/src/components/watchman/PopupChange.jsx"],"names":["React","useDispatch","useSelector","Input","useState","useRef","setPopupChangeDisplay","Button","PopupChange","first_name","setFirstName","last_name","setLastName","selectedEmployee","state","employees","popupDisplay","popupChangeDisplay","dispatch","createHandler","childRef1","childRef2","alert","current","HandleClear","clickHandle","event","stopPropagation","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,MAAR,QAAqB,OAArB;AACA,SAASC,qBAAT,QAAsC,gCAAtC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAO,gBAAP;;;AACA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,UAAD,EAAaC,YAAb,IAA6BN,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACO,SAAD,EAAYC,WAAZ,IAA2BR,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAMS,gBAAgB,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBF,gBAA1B,CAApC;AACA,QAAMG,YAAY,GAAGd,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBE,kBAA1B,CAAhC;AACA,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;;AAEA,WAASkB,aAAT,CAAuBC,SAAvB,EAAkCC,SAAlC,EACA;AACIC,IAAAA,KAAK,CAAC,QAAD,CAAL;AACAF,IAAAA,SAAS,CAACG,OAAV,CAAkBC,WAAlB;AACAH,IAAAA,SAAS,CAACE,OAAV,CAAkBC,WAAlB;AACAN,IAAAA,QAAQ,CAACZ,qBAAqB,CAAC,MAAD,CAAtB,CAAR;AACH;;AAED,WAASmB,WAAT,CAAqBC,KAArB,EACA;AACIA,IAAAA,KAAK,CAACC,eAAN;AACAD,IAAAA,KAAK,CAACE,cAAN;AACH;;AAED,QAAMR,SAAS,GAAGf,MAAM,EAAxB;AACA,QAAMgB,SAAS,GAAGhB,MAAM,EAAxB;AACA,sBACG;AAAA;AAAA;AAAA;AAAA,UADH;AAGH,CA1BD;;GAAMG,W;UAGuBN,W,EACJA,W,EACJD,W;;;KALfO,W;AA4BN,eAAeA,WAAf","sourcesContent":["import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Input from '../../utils/input/Input';\r\nimport {useState} from 'react'\r\nimport {useRef} from 'react'\r\nimport { setPopupChangeDisplay } from '../../reducers/employeeReducer';\r\nimport { Button } from 'react-bootstrap';\r\nimport './watchman.css'\r\nconst PopupChange = () => {\r\n    const [first_name, setFirstName] = useState('')\r\n    const [last_name, setLastName] = useState('')\r\n    const selectedEmployee = useSelector(state => state.employees.selectedEmployee)\r\n    const popupDisplay = useSelector(state => state.employees.popupChangeDisplay)\r\n    const dispatch = useDispatch()\r\n   \r\n    function createHandler(childRef1, childRef2)\r\n    {\r\n        alert(\"change\")\r\n        childRef1.current.HandleClear();\r\n        childRef2.current.HandleClear();\r\n        dispatch(setPopupChangeDisplay('none'))\r\n    }\r\n\r\n    function clickHandle(event)\r\n    {\r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n    }\r\n\r\n    const childRef1 = useRef();\r\n    const childRef2 = useRef();\r\n    return(\r\n       <div></div>\r\n    );\r\n};\r\n\r\nexport default PopupChange;"]},"metadata":{},"sourceType":"module"}
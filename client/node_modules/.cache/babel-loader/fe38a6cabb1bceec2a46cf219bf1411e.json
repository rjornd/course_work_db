{"ast":null,"code":"import axios from 'axios';\nimport { addFile, setFiles } from '../reducers/fileReducer';\nexport function getFiles(dirId) {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/files/${dirId ? '?parent=' + dirId : ''}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      dispatch(setFiles(response.data));\n      console.log(response.data);\n    } catch (e) {\n      alert(e.response.data.message);\n    }\n  };\n}\nexport function createDir(dirId, name) {\n  return async dispatch => {\n    try {\n      const response = await axios.post(`http://localhost:5000/api/files/`, {\n        name,\n        parent: dirId,\n        type: 'dir'\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      dispatch(addFile(response.data));\n    } catch (e) {\n      alert(e.response.data.message);\n    }\n  };\n}\nexport function uploadFile(file, dirId) {\n  return async dispatch => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      if (dirId) {\n        formData.append('parent', dirId);\n      }\n\n      const response = await axios.post(`http://localhost:5000/api/files/upload`, formData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        onUploadProgress: progressEvent => {\n          const totalLength = progressEvent.lengthComputable ? progressEvent.total : progressEvent.target.getResponseHeader('content-length') || progressEvent.target.getResponseHeader('x-decompressed-content-length');\n          console.log('total', totalLength);\n\n          if (totalLength) {\n            let progress = Math.round(progressEvent.loaded * 100 / totalLength);\n            console.log(progress);\n          }\n        }\n      });\n      dispatch(addFile(response.data));\n    } catch (e) {\n      alert(e.response.data.message);\n    }\n  };\n}","map":{"version":3,"sources":["F:/Files/GitHub/ProtectedMessenger/client/src/actions/file.js"],"names":["axios","addFile","setFiles","getFiles","dirId","dispatch","response","get","headers","Authorization","localStorage","getItem","data","console","log","e","alert","message","createDir","name","post","parent","type","uploadFile","file","formData","FormData","append","onUploadProgress","progressEvent","totalLength","lengthComputable","total","target","getResponseHeader","progress","Math","round","loaded"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { addFile, setFiles } from '../reducers/fileReducer'\r\n\r\nexport function getFiles(dirId){\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/api/files/${dirId ? '?parent='+dirId : ''}`, {\r\n                headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}\r\n            })\r\n            dispatch(setFiles(response.data))\r\n            console.log(response.data)\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport function createDir(dirId, name){\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.post(`http://localhost:5000/api/files/`, {\r\n                name,\r\n                parent: dirId,\r\n                type: 'dir'\r\n            },\r\n            {\r\n                headers: {Authorization: `Bearer ${localStorage.getItem('token')}`}\r\n            })\r\n            dispatch(addFile(response.data))\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n    }\r\n}\r\n\r\nexport function uploadFile(file, dirId){\r\n    return async dispatch => {\r\n        try {\r\n            const formData = new FormData()\r\n            formData.append('file', file)\r\n            if(dirId){\r\n                formData.append('parent', dirId)\r\n            }\r\n            const response = await axios.post(`http://localhost:5000/api/files/upload`, formData, \r\n            {\r\n                headers: {Authorization: `Bearer ${localStorage.getItem('token')}`},\r\n                onUploadProgress: progressEvent => {\r\n                    const totalLength = progressEvent.lengthComputable ? progressEvent.total : progressEvent.target.getResponseHeader('content-length') || progressEvent.target.getResponseHeader('x-decompressed-content-length');\r\n                    console.log('total', totalLength)\r\n                    if (totalLength) {\r\n                        let progress = Math.round((progressEvent.loaded * 100) / totalLength)\r\n                        console.log(progress)\r\n                    }\r\n                }\r\n            })\r\n            dispatch(addFile(response.data))\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}